apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        env:
          # Env vars are prioritized over --config
          - name: OLLAMA_IMAGE
            value: $(OLLAMA_IMAGE)
          - name: HF_ENDPOINT_IMAGE
            value: $(HF_ENDPOINT_IMAGE)
          - name: HF_SERVERLESS_IMAGE
            value: $(HF_SERVERLESS_IMAGE)
          - name: BEDROCK_IMAGE
            value: $(BEDROCK_IMAGE)
          - name: CEREBRAS_IMAGE
            value: $(CEREBRAS_IMAGE)
          - name: NVIDIA_IMAGE
            value: $(NVIDIA_IMAGE)
          - name: OPEN_BENCHMARK_IMAGE
            value: $(OPEN_BENCHMARK_IMAGE)
          - name: PASSTHROUGH_IMAGE
            value: $(PASSTHROUGH_IMAGE)
          - name: REMOTE_VLLM_IMAGE
            value: $(REMOTE_VLLM_IMAGE)
          - name: SAMBANOVA_IMAGE
            value: $(SAMBANOVA_IMAGE)
          - name: TGI_IMAGE
            value: $(TGI_IMAGE)
          - name: TOGETHER_IMAGE
            value: $(TOGETHER_IMAGE)
          - name: VERIFICATION_IMAGE
            value: $(VERIFICATION_IMAGE)
          - name: VLLM_GPU_IMAGE
            value: $(VLLM_GPU_IMAGE)
          - name: WATSONX_IMAGE
            value: $(WATSONX_IMAGE)
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
